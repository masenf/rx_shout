"""empty message

Revision ID: d7ad90d3a0ff
Revises: 
Create Date: 2024-03-22 03:27:56.116940

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel

# revision identifiers, used by Alembic.
revision: str = 'd7ad90d3a0ff'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('topic',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('locked', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_topic_name'), 'topic', ['name'], unique=True)
    op.create_table('userinfo',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('ext_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('enabled', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_userinfo_ext_id'), 'userinfo', ['ext_id'], unique=True)
    op.create_table('author',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('picture', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['userinfo.id'], ),
    sa.PrimaryKeyConstraint('user_id')
    )
    op.create_index(op.f('ix_author_user_id'), 'author', ['user_id'], unique=True)
    op.create_table('entry',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('ts', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('author_id', sa.Integer(), nullable=False),
    sa.Column('topic_id', sa.Integer(), nullable=True),
    sa.Column('text', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('image', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('hidden', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['author_id'], ['author.user_id'], ),
    sa.ForeignKeyConstraint(['topic_id'], ['topic.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_entry_author_id'), 'entry', ['author_id'], unique=False)
    op.create_index(op.f('ix_entry_topic_id'), 'entry', ['topic_id'], unique=False)
    op.create_table('entryflags',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('entry_id', sa.Integer(), nullable=False),
    sa.Column('type', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.ForeignKeyConstraint(['entry_id'], ['entry.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['userinfo.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_entryflags_entry_id'), 'entryflags', ['entry_id'], unique=False)
    op.create_index(op.f('ix_entryflags_user_id'), 'entryflags', ['user_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_entryflags_user_id'), table_name='entryflags')
    op.drop_index(op.f('ix_entryflags_entry_id'), table_name='entryflags')
    op.drop_table('entryflags')
    op.drop_index(op.f('ix_entry_topic_id'), table_name='entry')
    op.drop_index(op.f('ix_entry_author_id'), table_name='entry')
    op.drop_table('entry')
    op.drop_index(op.f('ix_author_user_id'), table_name='author')
    op.drop_table('author')
    op.drop_index(op.f('ix_userinfo_ext_id'), table_name='userinfo')
    op.drop_table('userinfo')
    op.drop_index(op.f('ix_topic_name'), table_name='topic')
    op.drop_table('topic')
    # ### end Alembic commands ###
