# Base compose file production deployment of reflex app with Caddy webserver
# providing TLS termination and reverse proxying.
#
# See `compose.prod.yaml` for more robust and performant deployment option.
#
# During build and run, set environment DOMAIN pointing
# to publicly accessible domain where app will be hosted
services:
  app:
    image: local/reflex-app
    environment:
      - DB_URL=sqlite:///data/reflex.db
      - ASYNC_DB_URL=sqlite+aiosqlite:///data/reflex.db
      - TELEMETRY_ENABLED
      - GOOGLE_CLIENT_ID
      - S3_ENDPOINT_URL
      - S3_ACCESS_KEY_ID
      - S3_SECRET_ACCESS_KEY
      - S3_BUCKET_NAME
      - S3_BUCKET_ACCESS_URL
    build:
      context: .
      dockerfile: prod.Dockerfile
    volumes:
       - db-data:/app/data
       - upload-data:/app/uploaded_files
    restart: always

  webserver:
    environment:
      DOMAIN: ${DOMAIN:-localhost}
    ports:
      - 443:443
      - 80:80  # For acme-challenge via HTTP.
    build:
      context: .
      dockerfile: Caddy.Dockerfile
    volumes:
       - caddy-data:/root/.caddy
    restart: always
    depends_on:
      - app

volumes:
  # SQLite data
  db-data:
  # Uploaded files
  upload-data:
  # TLS keys and certificates
  caddy-data:
